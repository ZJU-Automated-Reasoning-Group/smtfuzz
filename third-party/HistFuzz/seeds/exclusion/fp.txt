% var_Bool
var00; var00, Bool; 
% const_Bool
true
false
% (= (_ fp.to_sbv 32) roundTowardZero fp const_Int const_Int const_Int)) const_Int)
(= ((_ fp.to_sbv 32) roundTowardZero (fp #b0 #b10000011110 #x0000000000000)) #x80000000)
% (= (_ fp.to_ubv 32) roundTowardZero fp const_Int const_Int const_Int)) const_Int)
(= ((_ fp.to_ubv 32) roundTowardZero (fp #b0 #b10000011110 #x0000000000000)) #x80000000)
% (= const_FloatingPoint const_FloatingPoint)
(= (fp.max_i (fp #b0 #b00011111000 #xb0db2ac57d287) (fp #b1 #b00101101000 #x422c9af77f44c)) (fp #b0 #b00011111000 #xb0db2ac57d287))
% (= const_FloatingPoint var_FloatingPoint)
(= (fp #b0 #b10 #b10) (fp.min (fp.sqrt RNE (fp.mul RNE (_ +zero 2 3) (fp.div RTZ (fp.sub RNE (fp.max (fp.div RTN (_ -zero 2 3) var38) var39) var38) (_ +zero 2 3)))) var39)); var38, (_ FloatingPoint 2 3); ; var39, (_ FloatingPoint 2 3); ; var38, (_ FloatingPoint 2 3); ; var39, (_ FloatingPoint 2 3); 
% (= var_Float32 (_ to_fp 8 24) RNE const_Real))
(= var57 ((_ to_fp 8 24) RNE 1.0)); var57, Float32; 
(= var59 ((_ to_fp 8 24) RNE 2.0)); var59, Float32; 
% (= var_Float32 (_ to_fp 8 24) RNE fp.add RNE fp.mul RNE (_ to_fp 11 53) RNE var_Float32) (_ to_fp 11 53) RNE var_Float32)) (_ to_fp 11 53) RNE var_Float32))))
(= var65 ((_ to_fp 8 24) RNE (fp.add RNE (fp.mul RNE ((_ to_fp 11 53) RNE var60) ((_ to_fp 11 53) RNE var61)) ((_ to_fp 11 53) RNE var62)))); var65, Float32; ; var60, Float32; ; var61, Float32; ; var62, Float32; 
% (= var_Float32 (_ to_fp 8 24) RNE fp.fma RNE (_ to_fp 15 113) RNE var_Float32) (_ to_fp 15 113) RNE var_Float32) (_ to_fp 15 113) RNE var_Float32))))
(= var64 ((_ to_fp 8 24) RNE (fp.fma RNE ((_ to_fp 15 113) RNE var60) ((_ to_fp 15 113) RNE var61) ((_ to_fp 15 113) RNE var62)))); var64, Float32; ; var60, Float32; ; var61, Float32; ; var62, Float32; 
% (= var_Float32 (_ to_fp 8 24) const_Int))
(= var10 ((_ to_fp 8 24) #x00000000)); var10, Float32; 
(= var66 ((_ to_fp 8 24) #x807140a7)); var66, Float32; 
(= var67 ((_ to_fp 8 24) #xbf800000)); var67, Float32; 
% (= var_Float32 const_FloatingPoint)
(= var5 (fp #b0 #b01111111 #b10000000000001111110011)); var5, Float32; 
(= var6 (fp #b0 #b01111111 #b10001000000000101000001)); var6, Float32; 
(= var7 (fp #b1 #b10000000 #b00100110000001111110111)); var7, Float32; 
(= var8 (fp #b1 #b01100110 #b01111000011000100110100)); var8, Float32; 
(= var13 (fp #b0 #b00000000 #b00000000000000000000000)); var13, Float32; 
(= var14 (fp #b0 #b01111111 #b11011101101101101000101)); var14, Float32; 
(= var15 (fp #b0 #b01111111 #b11101100000111000100001)); var15, Float32; 
(= var16 (fp #b0 #b01100111 #b10100111110110000110101)); var16, Float32; 
(= var17 (fp #b0 #b10000000 #b11001011001001111100011)); var17, Float32; 
(= var29 (fp #b0 #b01111111 #b00000000101111111111111)); var29, Float32; 
(= var30 (fp #b0 #b01111111 #b00000001001110001010111)); var30, Float32; 
(= var31 (fp #b1 #b01111111 #b00000001111110011001011)); var31, Float32; 
(= var32 (fp #b0 #b01100110 #b00000000000111010100100)); var32, Float32; 
(= var34 (fp #b0 #b01111111 #b00101111011101100110001)); var34, Float32; 
(= var35 (fp #b0 #b01111111 #b11110000011000001011001)); var35, Float32; 
(= var36 (fp #b0 #b01100110 #b01110101110111111011001)); var36, Float32; 
(= var37 (fp #b0 #b10000000 #b00100110001100111111111)); var37, Float32; 
% (= var_Float32 var_Float32)
(= var9 var8); var9, Float32; ; var8, Float32; 
(= var63 var64); var63, Float32; ; var64, Float32; 
% (= var_Float32 var_FloatingPoint)
(= var9 (fp.fma RNE var5 var6 var7)); var9, Float32; ; var5, Float32; ; var6, Float32; ; var7, Float32; 
(= var13 (fp.fma RNE var10 var11 var12)); var13, Float32; ; var10, Float32; ; var11, Float32; ; var12, Float32; 
(= var33 (fp.fma RNE var29 var30 var31)); var33, Float32; ; var29, Float32; ; var30, Float32; ; var31, Float32; 
(= var47 (fp.mul RNE var45 var46)); var47, Float32; ; var45, Float32; ; var46, Float32; 
(= var49 (fp.mul RNE var45 var46)); var49, Float32; ; var45, Float32; ; var46, Float32; 
(= var50 (fp.fma RNE var45 var46 (fp.neg var49))); var50, Float32; ; var45, Float32; ; var46, Float32; ; var49, Float32; 
(= var63 (fp.fma RNE var60 var61 var62)); var63, Float32; ; var60, Float32; ; var61, Float32; ; var62, Float32; 
(= var67 (fp.roundToIntegral roundNearestTiesToAway var66)); var67, Float32; ; var66, Float32; 
% (= var_Float64 var_Float64)
% (= var_Float64 var_FloatingPoint)
(= var48 (fp.mul RNE ((_ to_fp 11 53) RNE var45) ((_ to_fp 11 53) RNE var46))); var48, Float64; ; var45, Float32; ; var46, Float32; 
(= var51 (fp.add RNE ((_ to_fp 11 53) RNE var49) ((_ to_fp 11 53) RNE var50))); var51, Float64; ; var49, Float32; ; var50, Float32; 
% (= var_FloatingPoint (_ to_fp 8 24) RNE const_Real const_Int))
(= var41 ((_ to_fp 8 24) RNE 1.0 0)); var41, (_ FloatingPoint 8 24); 
% (= var_FloatingPoint const_FloatingPoint)
(= var0 (fp #b0 #b00011111000 #xb0db2ac57d287)); var0, (_ FloatingPoint 11 53); 
(= var1 (fp #b1 #b00101101000 #x422c9af77f44c)); var1, (_ FloatingPoint 11 53); 
(= (fp.abs var18) (fp.min (_ +zero 8 24) (_ -zero 8 24))); var18, Float32; 
(= var19 (fp.roundToIntegral roundNearestTiesToEven ((_ to_fp 8 24) roundNearestTiesToEven (/ 9 10)))); var19, (_ FloatingPoint 8 24); 
(= (fp.abs var20) (fp.min (_ +zero 8 24) (_ -zero 8 24))); var20, Float32; 
(= (fp.sqrt RNE var52) (fp.sqrt RNE (fp #b0 #b000 #b001))); var52, (_ FloatingPoint 3 4); 
(= (fp.sqrt RNE var53) (fp.sqrt RNE (fp #b0 #b00000000 #b00000000000000000000001))); var53, Float32; 
% (= var_FloatingPoint var_Float32)
(= (fp.fma RNE var14 var15 var16) var17); var14, Float32; ; var15, Float32; ; var16, Float32; ; var17, Float32; 
(= (fp.fma RNE var34 var35 var36) var37); var34, Float32; ; var35, Float32; ; var36, Float32; ; var37, Float32; 
% (= var_FloatingPoint var_FloatingPoint)
(= var42 (fp.fma RNE var41 var43 var41)); var42, (_ FloatingPoint 8 24); ; var41, (_ FloatingPoint 8 24); ; var43, (_ FloatingPoint 8 24); ; var41, (_ FloatingPoint 8 24); 
(= (fp.roundToIntegral RNE var54) var54); var54, (_ FloatingPoint 3 5); ; var54, (_ FloatingPoint 3 5); 
(= (fp.roundToIntegral RNE var55) var54); var55, (_ FloatingPoint 3 5); ; var54, (_ FloatingPoint 3 5); 
% (fp.eq var_FloatingPoint (_ to_fp 8 24) roundNearestTiesToEven / const_Int const_Int)))
(fp.eq var21 ((_ to_fp 8 24) roundNearestTiesToEven (/ 4067395 16777216))); var21, (_ FloatingPoint 8 24); 
(fp.eq var22 ((_ to_fp 8 24) roundNearestTiesToEven (/ 1 1))); var22, (_ FloatingPoint 8 24); 
(fp.eq var23 ((_ to_fp 8 24) roundNearestTiesToEven (/ 12113169 8388608))); var23, (_ FloatingPoint 8 24); 
(fp.eq var24 ((_ to_fp 8 24) roundNearestTiesToEven (/ 8109701 2097152))); var24, (_ FloatingPoint 8 24); 
(fp.eq var25 ((_ to_fp 8 24) roundNearestTiesToEven (/ 4217779 134217728))); var25, (_ FloatingPoint 8 24); 
% (fp.eq var_FloatingPoint const_FloatingPoint)
(fp.eq (fp.add roundNearestTiesToEven var3 (fp #b0 #b01111111111 #x0000000000000)) (fp #b0 #b10000000000 #x0000000000000)); var3, (_ FloatingPoint 11 53); 
(fp.eq var78 (fp #b1 #b10000011 #b00110100100101101111101)); var78, (_ FloatingPoint 8 24); 
% (fp.eq var_FloatingPoint var_FloatingPoint)
(fp.eq var26 (fp.fma roundNearestTiesToEven var23 (fp.sub roundNearestTiesToEven var22 var27) (fp.mul roundNearestTiesToEven var24 var27))); var26, (_ FloatingPoint 8 24); ; var23, (_ FloatingPoint 8 24); ; var22, (_ FloatingPoint 8 24); ; var27, (_ FloatingPoint 8 24); ; var24, (_ FloatingPoint 8 24); ; var27, (_ FloatingPoint 8 24); 
(fp.eq var27 var21); var27, (_ FloatingPoint 8 24); ; var21, (_ FloatingPoint 8 24); 
(fp.eq var28 var26); var28, (_ FloatingPoint 8 24); ; var26, (_ FloatingPoint 8 24); 
(fp.eq var76 var77); var76, (_ FloatingPoint 8 24); ; var77, (_ FloatingPoint 8 24); 
% (fp.geq var_FloatingPoint var_FloatingPoint)
(fp.geq var78 var76); var78, (_ FloatingPoint 8 24); ; var76, (_ FloatingPoint 8 24); 
(fp.geq var78 var78); var78, (_ FloatingPoint 8 24); ; var78, (_ FloatingPoint 8 24); 
% (fp.gt var_FloatingPoint var_FloatingPoint)
(fp.gt var78 var76); var78, (_ FloatingPoint 8 24); ; var76, (_ FloatingPoint 8 24); 
% (fp.isNaN var_FloatingPoint)
(fp.isNaN var76); var76, (_ FloatingPoint 8 24); 
% (fp.isNormal (_ to_fp 8 24) RNE var_Float64))
(fp.isNormal ((_ to_fp 8 24) RNE var48)); var48, Float64; 
% (fp.isNormal var_Float32)
(fp.isNormal var45); var45, Float32; 
(fp.isNormal var60); var60, Float32; 
(fp.isNormal var62); var62, Float32; 
% (fp.isNormal var_FloatingPoint)
(fp.isNormal var69); var69, (_ FloatingPoint 8 24); 
(fp.isNormal var71); var71, (_ FloatingPoint 8 24); 
% (fp.leq (_ to_fp 8 24) RNE const_Real) var_Float32)
(fp.leq ((_ to_fp 8 24) RNE 1.0) var45); var45, Float32; 
% (fp.leq var_Float32 (_ to_fp 8 24) RNE - const_Real)))
(fp.leq var74 ((_ to_fp 8 24) RNE (- 1.0))); var74, Float32; 
% (fp.leq var_Float32 (_ to_fp 8 24) RNE const_Real))
(fp.leq var46 ((_ to_fp 8 24) RNE 2.0)); var46, Float32; 
% (fp.leq var_Float32 var_Float32)
(fp.leq var45 var46); var45, Float32; ; var46, Float32; 
(fp.leq var58 var60); var58, Float32; ; var60, Float32; 
(fp.leq var61 var59); var61, Float32; ; var59, Float32; 
(fp.leq var62 var57); var62, Float32; ; var57, Float32; 
% (fp.leq var_FloatingPoint var_FloatingPoint)
(fp.leq var68 var69); var68, (_ FloatingPoint 8 24); ; var69, (_ FloatingPoint 8 24); 
(fp.leq var78 var78); var78, (_ FloatingPoint 8 24); ; var78, (_ FloatingPoint 8 24); 
% (fp.lt var_FloatingPoint var_FloatingPoint)
(fp.lt var28 var23); var28, (_ FloatingPoint 8 24); ; var23, (_ FloatingPoint 8 24); 
(fp.lt var44 var41); var44, (_ FloatingPoint 8 24); ; var41, (_ FloatingPoint 8 24); 
% Null
(= (fp.roundToIntegral RNE x) x)
(= (fp.roundToIntegral RNE var4) x); var4, (_ FloatingPoint 3 5); 
(= var12 (_ -zero 8 24)); var12, Float32; 
(= var40 (_ +zero 8 24)); var40, (_ FloatingPoint 8 24); 
(= #x00000003 action_ackermann_0)
(fp.leq zero var71); var71, (_ FloatingPoint 8 24); 
(fp.leq var71 one); var71, (_ FloatingPoint 8 24); 
(fp.leq one var68); var68, (_ FloatingPoint 8 24); 
(fp.leq var69 four); var69, (_ FloatingPoint 8 24); 
(fp.eq var70 w); var70, (_ FloatingPoint 8 24); 
(fp.leq zero var73); var73, (_ FloatingPoint 8 24); 
(fp.lt var72 one); var72, (_ FloatingPoint 8 24); 
(distinct _x_8 _y_8)
(= r r2)